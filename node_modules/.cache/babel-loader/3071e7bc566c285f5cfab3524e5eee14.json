{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhm20009\\\\Desktop\\\\Web Development\\\\react-projects\\\\dessert-app\\\\src\\\\components\\\\Desserts\\\\DessertElement\\\\DessertElementForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport modules from \"./DessertElementForm.module.css\";\nimport Input from '../../UI/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DessertElementForm = props => {\n  _s();\n\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value; // a string value comes from this assignment.\n\n    const enteredAmountNumber = +enteredAmount; //to convert string value to a number.\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n\n    props.onAddToElement(enteredAmountNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: modules.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: \"amount\",\n        type: \"number\",\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n        defaultValue: \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: modules.button,\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"please enter a valid amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DessertElementForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n\n_c = DessertElementForm;\nexport default DessertElementForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DessertElementForm\");","map":{"version":3,"sources":["C:/Users/dhm20009/Desktop/Web Development/react-projects/dessert-app/src/components/Desserts/DessertElement/DessertElementForm.js"],"names":["React","useRef","useState","modules","Input","DessertElementForm","props","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToElement","form","id","type","min","max","step","defaultValue","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAMO,cAAc,GAAGR,MAAM,EAA7B;;AAEA,QAAMS,aAAa,GAAGC,KAAK,IAAI;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C,CAH6B,CAGuB;;AACpD,UAAMC,mBAAmB,GAAG,CAACH,aAA7B,CAJ6B,CAIe;;AAE5C,QAAIA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACFF,mBAAmB,GAAG,CADpB,IAEFA,mBAAmB,GAAG,CAFxB,EAE2B;AACzBR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AAED;;AAEDF,IAAAA,KAAK,CAACa,cAAN,CAAqBH,mBAArB;AACD,GAfD;;AAiBA,sBACE;AAAM,IAAA,SAAS,EAAEb,OAAO,CAACiB,IAAzB;AAA+B,IAAA,QAAQ,EAAEV,aAAzC;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAED,cADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAIE,MAAA,KAAK,EAAE;AACLY,QAAAA,EAAE,EAAE,QADC;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,GAAG,EAAE,GAHA;AAILC,QAAAA,GAAG,EAAE,GAJA;AAKLC,QAAAA,IAAI,EAAE,GALD;AAMLC,QAAAA,YAAY,EAAE;AANT;AAJT;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAQ,MAAA,SAAS,EAAEvB,OAAO,CAACwB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,EAeG,CAACpB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAzCD;;GAAMF,kB;;KAAAA,kB;AA2CN,eAAeA,kBAAf","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport modules from \"./DessertElementForm.module.css\";\r\nimport Input from '../../UI/Input';\r\n\r\nconst DessertElementForm = (props) => {\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n\r\n  const amountInputRef = useRef();\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const enteredAmount = amountInputRef.current.value; // a string value comes from this assignment.\r\n    const enteredAmountNumber = +enteredAmount; //to convert string value to a number.\r\n\r\n    if (enteredAmount.trim().length === 0 ||\r\n      enteredAmountNumber < 1 ||\r\n      enteredAmountNumber > 5) {\r\n      setAmountIsValid(false);\r\n      return;\r\n\r\n    }\r\n\r\n    props.onAddToElement(enteredAmountNumber);\r\n  };\r\n\r\n  return (\r\n    <form className={modules.form} onSubmit={submitHandler}>\r\n      <Input\r\n        ref={amountInputRef}\r\n        label=\"Amount\"\r\n\r\n        input={{\r\n          id: \"amount\",\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"5\",\r\n          step: \"1\",\r\n          defaultValue: \"1\"\r\n        }}\r\n      />\r\n      <button className={modules.button}>+ Add</button>\r\n      {!amountIsValid && <p>please enter a valid amount</p>}\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default DessertElementForm;\r\n"]},"metadata":{},"sourceType":"module"}