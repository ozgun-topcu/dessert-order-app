{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhm20009\\\\Desktop\\\\Web Development\\\\react-projects\\\\dessert-app\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findindex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findindex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 8\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/dhm20009/Desktop/Web Development/react-projects/dessert-app/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findindex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["\r\nimport {useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount:0,\r\n}\r\n\r\nconst cartReducer = (state, action) =>{\r\n    if(action.type===\"ADD\"){\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingCartItemIndex = state.items.findindex(item => item.id === action.item.id);\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        let updatedItems;\r\n\r\n        if(existingCartItem){\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems = [ ...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        } else {\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n\r\n               \r\n        return {\r\n            items:updatedItems,\r\n            totalAmount:updatedTotalAmount,\r\n        };\r\n    }\r\n\r\n\r\n    if(action.type ===\"REMOVE\"){\r\n      const existingCartItemIndex = state.items.findindex(item => item.id === action.id); \r\n      const existingItem =  state.items[existingCartItemIndex];   \r\n      const updatedTotalAmount = state.totalAmount - existingItem.price; \r\n      let updatedItems;\r\n      if(existingItem.amount === 1){\r\n        updatedItems = state.items.filter(item => item.id !== action.id);\r\n      } else {\r\n        const updatedItem = {...existingItem, amount: existingItem.amount - 1} \r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      }\r\n\r\n      return {\r\n          items: updatedItems,\r\n          totalAmount: updatedTotalAmount,\r\n      }\r\n    }\r\n\r\n    return defaultCartState; \r\n};\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = item => {\r\n        dispatchCartAction({type:\"ADD\", item:item});\r\n    };\r\n\r\n    const removeItemFromCartHandler = id => {\r\n        dispatchCartAction({type:\"REMOVE\", id:id});\r\n    } \r\n\r\n    const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler\r\n\r\n}   \r\n\r\nreturn <CartContext.Provider value={cartContext}>\r\n    {props.children}\r\n</CartContext.Provider>\r\n\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}