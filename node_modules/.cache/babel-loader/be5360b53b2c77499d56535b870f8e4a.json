{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhm20009\\\\Desktop\\\\Web Development\\\\react-projects\\\\dessert-app\\\\src\\\\store\\\\BasketProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport BasketContext from \"./basket-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultBasketState = {\n  elements: [],\n  totalAmount: 0\n};\n\nconst basketReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.element.price * action.element.amount;\n    const existingBasketElementIndex = state.elements.findIndex(element => element.id === action.element.id);\n    const existingBasketElement = state.elements[existingBasketElementIndex];\n    let updatedElements;\n\n    if (existingBasketElement) {\n      const updatedElement = { ...existingBasketElement,\n        amount: existingBasketElement.amount + action.element.amount\n      };\n      updatedElements = [...state.elements];\n      updatedElements[existingBasketElementIndex] = updatedElement;\n    } else {\n      updatedElements = state.elements.concat(action.element);\n    }\n\n    return {\n      elements: updatedElements,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  ;\n\n  if (action.type === \"REMOVE\") {\n    const existingBasketElementIndex = state.elements.findIndex(element => element.id === action.id);\n    const existingBasketElement = state.elements[existingBasketElementIndex];\n    const updatedTotalAmount = state.totalAmount - existingBasketElement.price;\n    let updatedElements;\n\n    if (existingBasketElement.amount === 1) {\n      updatedElements = state.elements.filter(element => element.id !== action.id);\n    } else {\n      const updatedElement = { ...existingBasketElement,\n        amount: existingBasketElement.amount - 1\n      };\n      updatedElements = [...state.elements];\n      updatedElements[existingBasketElementIndex] = updatedElement;\n    }\n\n    return {\n      elements: updatedElements,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  ;\n\n  if (action.type === \"CLEAR\") {\n    return defaultBasketState;\n  }\n\n  ;\n  return defaultBasketState;\n};\n\nconst BasketProvider = props => {\n  _s();\n\n  const [basketState, dispatchBasketAction] = useReducer(basketReducer, defaultBasketState);\n\n  const addElementToBasketHandler = element => {\n    dispatchBasketAction({\n      type: \"ADD\",\n      element: element\n    });\n  };\n\n  const removeElementFromBasketHandler = id => {\n    dispatchBasketAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const clearBasketHandler = id => {\n    dispatchBasketAction({\n      type: \"CLEAR\",\n      id: id\n    });\n  };\n\n  const basketContext = {\n    elements: basketState.elements,\n    totalAmount: basketState.totalAmount,\n    addElement: addElementToBasketHandler,\n    removeElement: removeElementFromBasketHandler,\n    clearBasket: clearBasketHandler\n  };\n  return /*#__PURE__*/_jsxDEV(BasketContext.Provider, {\n    value: basketContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BasketProvider, \"vHf++TZn66NScWTCtSTEYNDIpa4=\");\n\n_c = BasketProvider;\nexport default BasketProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasketProvider\");","map":{"version":3,"sources":["C:/Users/dhm20009/Desktop/Web Development/react-projects/dessert-app/src/store/BasketProvider.js"],"names":["useReducer","BasketContext","defaultBasketState","elements","totalAmount","basketReducer","state","action","type","updatedTotalAmount","element","price","amount","existingBasketElementIndex","findIndex","id","existingBasketElement","updatedElements","updatedElement","concat","filter","BasketProvider","props","basketState","dispatchBasketAction","addElementToBasketHandler","removeElementFromBasketHandler","clearBasketHandler","basketContext","addElement","removeElement","clearBasket","children"],"mappings":"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","sourcesContent":["\r\nimport { useReducer } from \"react\";\r\nimport BasketContext from \"./basket-context\";\r\n\r\nconst defaultBasketState = {\r\n    elements: [],\r\n    totalAmount: 0,\r\n}\r\n\r\nconst basketReducer = (state, action) => {\r\n\r\n    if (action.type === \"ADD\") {\r\n        const updatedTotalAmount = state.totalAmount + (action.element.price * action.element.amount);\r\n\r\n        const existingBasketElementIndex = state.elements.findIndex(element => element.id === action.element.id);\r\n        const existingBasketElement = state.elements[existingBasketElementIndex];\r\n        let updatedElements;\r\n\r\n        if (existingBasketElement) {\r\n            const updatedElement = {\r\n                ...existingBasketElement,\r\n                amount: existingBasketElement.amount + action.element.amount\r\n            };\r\n            updatedElements = [...state.elements];\r\n            updatedElements[existingBasketElementIndex] = updatedElement;\r\n        } else {\r\n            updatedElements = state.elements.concat(action.element);\r\n        }\r\n\r\n\r\n        return {\r\n            elements: updatedElements,\r\n            totalAmount: updatedTotalAmount,\r\n        };\r\n    };\r\n\r\n\r\n    if (action.type === \"REMOVE\") {\r\n\r\n        const existingBasketElementIndex = state.elements.findIndex(element => element.id === action.id);\r\n        const existingBasketElement = state.elements[existingBasketElementIndex];\r\n        const updatedTotalAmount = state.totalAmount - existingBasketElement.price;\r\n\r\n        let updatedElements;\r\n        if (existingBasketElement.amount === 1) {\r\n            updatedElements = state.elements.filter(element => element.id !== action.id);\r\n        } else {\r\n            const updatedElement = { ...existingBasketElement, amount: existingBasketElement.amount - 1 }\r\n            updatedElements = [...state.elements];\r\n            updatedElements[existingBasketElementIndex] = updatedElement;\r\n        }\r\n\r\n        return {\r\n            elements: updatedElements,\r\n            totalAmount: updatedTotalAmount,\r\n        }\r\n\r\n\r\n    };\r\n \r\n\r\n    if (action.type === \"CLEAR\") {\r\n        return defaultBasketState\r\n    };\r\n\r\n    return defaultBasketState;\r\n};\r\n\r\n\r\nconst BasketProvider = props => {\r\n\r\n    const [basketState, dispatchBasketAction] = useReducer(basketReducer, defaultBasketState);\r\n\r\n    const addElementToBasketHandler = (element) => {\r\n        dispatchBasketAction({ type: \"ADD\", element: element });\r\n    };\r\n\r\n    const removeElementFromBasketHandler = id => {\r\n        dispatchBasketAction({ type: \"REMOVE\", id: id });\r\n    };\r\n\r\n    const clearBasketHandler = (id) => {\r\n        dispatchBasketAction({ type: \"CLEAR\", id: id });\r\n    };\r\n\r\n    const basketContext = {\r\n        elements: basketState.elements,\r\n        totalAmount: basketState.totalAmount,\r\n        addElement: addElementToBasketHandler,\r\n        removeElement: removeElementFromBasketHandler,\r\n        clearBasket: clearBasketHandler\r\n\r\n    };\r\n\r\n    return (\r\n        <BasketContext.Provider value={basketContext}>\r\n            {props.children}\r\n        </BasketContext.Provider>\r\n    )\r\n\r\n};\r\n\r\nexport default BasketProvider;"]},"metadata":{},"sourceType":"module"}